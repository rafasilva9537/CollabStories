services:
  api:
    build:
      context: ./api
      target: release
    ports:
      - "5014:8080"
    container_name: collabstories_api
    hostname: collabstories_host
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_SECRET=${JWT_SECRET}
      - MSSQL_CONNECTION_STRING=${MSSQL_CONNECTION_STRING}
    depends_on:
      db:
        condition: service_healthy
        restart: true
    restart: on-failure:10

  db:
    image: mcr.microsoft.com/mssql/server
    ports:
      - "1434:1433"
    container_name: collabstories_mssql
    hostname: mssql_host
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - MSSQL_SA_PASSWORD=${MSSQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -C -P ${MSSQL_PASSWORD} -Q 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 15
    volumes:
      - collabstories_db:/var/opt/mssql

volumes:
  collabstories_db: